// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model NewsArticle {
  id              Int       @id @default(autoincrement())
  title           String
  content         String
  authorId        Int
  category        String
  tags            String[]  // Array of tags
  status          Status    @default(DRAFT_BY_REPORTER)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  publishedAt     DateTime?

  // New fields
  newsImage       String?
  newsVideoLink   String?
  reworkComments  String?
  newsSource      String?
  newsCourtesy    String?
  newsPriority    String?
  storyId         Int?
  reportedTimeIST String?
  reportingCountry String?
  reportedTimeCST String?
  
  //author          User      @relation(fields: [authorId], references: [id])
}


model User {
  id       Int       @id @default(autoincrement())
  name     String
  email    String   @unique
  //articles NewsArticle[]

  role     Role     @default(REPORTER)
}

enum Status {
  DRAFT_BY_REPORTER
  UNDER_REVIEW
  FEEDBACK_OPEN //The editor has reviewd and commnets are sent to reporter
  APPROVED
  PUBLISHED // Published means it's already archived
}

enum Role {
  ADMIN
  EDITOR
  REPORTER
}
